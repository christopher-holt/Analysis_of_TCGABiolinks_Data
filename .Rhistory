setwd()
getwd()
source("Scripts/functions.R")
library(TCGAbiolinks)
library(tidyverse)
setwd('Datasets')
Cancers <- c("LAML", "BLCA")
Cancers1 <- c("ESCA")
Cancers2 <- c("KICH", "KIRC")
Cancers3 <- c("KIRP", "LUAD")
Cancers4 <- c("LUSC", "PAAD")
Cancers5 <- c("STAD", "LIHC" )
clin <- download_clinical(Cancers1[i])
i = 1
clin <- download_clinical(Cancers1[i])
mut <- download_mutational(Cancers1[i])
clin <- download_clinical(Cancers[i])
mut <- download_mutational(Cancers[i])
Data = "ESCA"
pipelines <- c("somaticsniper", "muse", "mutect", "varscan2")
combined <- data.frame()
Data <- GDCquery_Maf(paste0(Data), pipelines = pipelines[i])
Data$tumor_barcode <- str_replace_all(Data$Tumor_Sample_Barcode, pattern = '-',replacement = '.')
Data$tumor_barcode <- str_sub(Data$tumor_barcode, start = 1, end = 12)
Data$tumor_barcode <- sapply(Data$tumor_barcode, tolower)
Data$pipeline = paste0(pipelines[i])
colnames(Data) <- tolower(colnames(Data))
hgvsc1 <- str_replace_all(Data$hgvsc, pattern = "^c.", replacement = "")
c <- as.data.frame(hgvsc1)
c <- type.convert(c, as.is = T)
Data_1 <- cbind(Data, c)
combined <- rbind(combined, Data_1)
i = 2
Data <- GDCquery_Maf(paste0(Data), pipelines = pipelines[i])
install.packages("devtools", dependencies = TRUE)
install.packages("robustbase")
devtools::install_github(repo = "BioinformaticsFMRP/TCGAbiolinks")
devtools::install_github(repo = "BioinformaticsFMRP/TCGAbiolinks")
Data = "ESCA"
Data <- GDCquery_Maf(paste0(Data), pipelines = pipelines[i])
for (i in 1:length(Cancers1)){
clin <- download_clinical(Cancers1[i])
mut <- download_mutational(Cancers1[i])
mut <- classify_Changes(mut)
total <- merge_ind(clin,mut)  write.csv(total, paste0(Cancers1[i], ".csv"))
assign(paste(Cancers1[i]), total)
}
download_mutational<- function(Data){
pipelines <- c("somaticsniper", "muse", "mutect", "varscan2")
combined <- data.frame()
for (i in 1:length(pipelines)){
Data <- GDCquery_Maf(paste0(Data), pipelines = pipelines[i])
Data$tumor_barcode <- str_replace_all(Data$Tumor_Sample_Barcode, pattern = '-',replacement = '.')
Data$tumor_barcode <- str_sub(Data$tumor_barcode, start = 1, end = 12)
Data$tumor_barcode <- sapply(Data$tumor_barcode, tolower)
Data$pipeline = paste0(pipelines[i])
colnames(Data) <- tolower(colnames(Data))
hgvsc1 <- str_replace_all(Data$hgvsc, pattern = "^c.", replacement = "")
c <- as.data.frame(hgvsc1)
c <- type.convert(c, as.is = T)
Data_1 <- cbind(Data, c)
combined <- rbind(combined, Data_1)
}
return(combined)
}
for (i in 1:length(Cancers1)){
clin <- download_clinical(Cancers1[i])
mut <- download_mutational(Cancers1[i])
mut <- classify_Changes(mut)
total <- merge_ind(clin,mut)  write.csv(total, paste0(Cancers1[i], ".csv"))
assign(paste(Cancers1[i]), total)
}
for (i in 1:length(Cancers1)){
clin <- download_clinical(Cancers1[i])
mut <- download_mutational(Cancers1[i])
mut <- classify_Changes(mut)
total <- merge_ind(clin,mut)
write.csv(total, paste0(Cancers1[i], ".csv"))
assign(paste(Cancers1[i]), total)
}
for (i in 1:length(Cancers1)){
clin <- download_clinical(Cancers1[i])
mut <- download_mutational(Cancers1[i])
mut <- classify_Changes(mut)
total <- merge_ind(clin,mut)
write.csv(total, paste0(Cancers1[i], ".csv"))
assign(paste(Cancers1[i]), total)
}
`devtools::install_github("BioinformaticsFMRP/TCGAbiolinks")`
devtools::install_github("BioinformaticsFMRP/TCGAbiolinks")
install.packages("sesame")
library(BiocManager)
BiocManager::install("TCGAbiolinks")
library(TCGAbiolinks)
i = 1
mut <- download_mutational(Cancers1[i])
